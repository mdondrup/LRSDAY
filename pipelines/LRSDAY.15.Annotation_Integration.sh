#!/bin/bash
set -e 
#######################################
# load environment variables for LRSDAY
source ./../../env.sh

#######################################
# set project-specific variables
prefix="CPG_1a" # The file name prefix (only allowing strings of alphabetical letters, numbers, and underscores) for the processing sample. Default = "CPG_1a" for the testing example.          

genome_assembly="./../07.Supervised_Final_Assembly/$prefix.assembly.final.fa" # The file path of the final input genome assembly.
centromere_gff3="./../08.Centromere_Annotation/$prefix.nuclear_genome.centromere.gff3" # The path of the final centromere annotation gff3 generated by task 08.Centromere_Annotation_for_FinalAssembly, use "" if not existing.
TE_gff3="./../11.TE_Annotation/$prefix.nuclear_genome.TE.gff3" # The file path of the TE annotation gff3 generated by task 11.TE_Annotation, use "" if not existing.
X_element_gff3="./../12.Core_X_Element_Annotation/$prefix.nuclear_genome.X_element.gff3" # The file path of the X_element annotation gff3 generated by task 12.CoreX_Annotation, use "" if not existing.
Y_prime_element_gff3="./../13.Y_Prime_Element_Annotation/$prefix.nuclear_genome.Y_prime_element.gff3" # The file path of the Y_prime_element annotation gff3 generated by task 13.Yprime_Annotation, use "" if not existing.
nuclear_gene_gff3="./../14.Gene_Orthology_Identification/$prefix.nuclear_genome.SGD_orthology_mapped.gff3" # The file path of the nuclear gene annotation gff3 generated by task 14.GeneOrthology_Identification (which is better) or 09.Nuclear_Gene_Annotation, use "" if not existing.
mitochondrial_gene_gff3="./../14.Gene_Orthology_Identification/$prefix.mitochondrial_genome.SGD_orthology_mapped.gff3" # The file path of the mitochondrial gene annotation gff3 generated by task 14.GeneOrthology_Identification (which is better) or 10.Mitochondrial_Gene_Annotation, use "" if not existing.
chrMT_tag="chrMT" # The sequence name for the mitochondrial genome in the input genome assembly, if there are multiple corresponding contigs/scaffolds, use a single ';' to separate them. e.g. "chrMT_1;chrMT_2". Default = "chrMT". 
chrMT_genetic_code_table=3 # The NCBI genetic code table (https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi) for the annotated mitochondrial genome. Default = 3 (i.e. Yeast Mitochondria)

debug="no" # use "yes" if prefer to keep intermediate files, otherwise use "no".

######################################
# process the pipeline

echo $chrMT_tag | sed -e "s/;/\n/g" > $prefix.assembly.chrMT.list
perl $LRSDAY_HOME/scripts/select_fasta_by_list.pl -i $genome_assembly -l $prefix.assembly.chrMT.list -m reverse -o $prefix.nuclear_genome.fa
perl $LRSDAY_HOME/scripts/select_fasta_by_list.pl -i $genome_assembly -l $prefix.assembly.chrMT.list -m normal -o $prefix.mitochondrial_genome.fa

perl $LRSDAY_HOME/scripts/tidy_fasta.pl -i $prefix.nuclear_genome.fa -o $prefix.nuclear_genome.tidy.fa

cat $centromere_gff3 $TE_gff3 $X_element_gff3 $Y_prime_element_gff3 $nuclear_gene_gff3  >$prefix.nuclear_genome.concatenated.gff3
perl $LRSDAY_HOME/scripts/sort_gff3.pl -i $prefix.nuclear_genome.concatenated.gff3 -t $prefix -o $prefix.nuclear_genome.tidy.gff3 -r $prefix.nuclear_genome.tidy.fa

if [[ ! -z $nuclear_gene_gff3 ]]
then
    perl $LRSDAY_HOME/scripts/extract_cds_from_tidy_gff3.pl -r $prefix.nuclear_genome.tidy.fa -g $prefix.nuclear_genome.tidy.gff3 -o $prefix.nuclear_genome.tidy.cds.fa
    perl $LRSDAY_HOME/scripts/cds2protein.pl -i $prefix.nuclear_genome.tidy.cds.fa -p $prefix.nuclear_genome.tidy -t 1
fi

if [[ $(egrep -c "^>" "$prefix.mitochondrial_genome.fa") -eq 0 ]]
then
    echo "No mitochondrial genome assembly was detected! Skip final annotation aggregation for the mitochondrial genome!"
else
    perl $LRSDAY_HOME/scripts/tidy_fasta.pl -i $prefix.mitochondrial_genome.fa -o $prefix.mitochondrial_genome.tidy.fa
    cp $mitochondrial_gene_gff3 $prefix.mitochondrial_genome.tidy.gff3
    if [[ ! -z $mitochondrial_gene_gff3 ]]
    then
	perl $LRSDAY_HOME/scripts/extract_cds_from_tidy_gff3.pl -r $prefix.mitochondrial_genome.tidy.fa -g $prefix.mitochondrial_genome.tidy.gff3 -o $prefix.mitochondrial_genome.tidy.cds.fa
	perl $LRSDAY_HOME/scripts/cds2protein.pl -i $prefix.mitochondrial_genome.tidy.cds.fa -p $prefix.mitochondrial_genome.tidy -t $chrMT_genetic_code_table
    fi

fi



# clean up intermediate files
if [[ $debug == "no" ]]
then
    rm $prefix.nuclear_genome.concatenated.gff3

    if [[ -e $prefix.nuclear_genome.fa ]]
    then
	rm $prefix.nuclear_genome.fa
    fi

    if [[ -e $prefix.mitochondrial_genome.fa ]]
    then
	rm $prefix.mitochondrial_genome.fa
    fi
fi

############################
# checking bash exit status
if [[ $? -eq 0 ]]
then
    echo ""
    echo "LRSDAY message: This bash script has been successfully processed! :)"
    echo ""
    echo ""
    exit 0
fi
############################
